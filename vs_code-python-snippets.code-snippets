{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
    "f-string": {
		"scope": "python",
		"prefix": "f",
		"body": [
			"f\"$1{$2}$3\"$0"
		],
		"description": "insert f-string"
	},
    "pandas-reset-index": {
		"scope": "python",
		"prefix": "reset",
		"body": [
			"$1 = $1.reset_index(drop=True)\n$0"
		],
		"description": "pandas - reset index"
	},
    "pandas-filter": {
        "scope": "python",
		"prefix": "pdfilter",
		"body": [
			"$1 = $1[$1.apply(lambda x: $2(x), axis=1)]. \\\n    reset_index(drop=True)\n$0"
		],
		"description": "pandas - filter dataframe"
    },
    "pandas-to-csv": {
		"scope": "python",
		"prefix": "csv",
		"body": [
			"$1.to_csv($2, index=False)\n$0"
		],
		"description": "pandas - to csv"
	},
    "function-definition": {
        "scope": "python",
		"prefix": "def",
		"body": [
			"def $1($2):\n    $0"
		],
		"description": "create function"
    },
    "doc-string": {
        "scope": "python",
		"prefix": "doc",
		"body": [
			"\"\"\"\nDescription$1\n\n>>> print(1)\n1\n\nArgs:\n    arg: description\n\"\"\"\n$0"
		],
		"description": "insert doc-string"
    },
    "with-open-read": {
        "scope": "python",
		"prefix": "with",
		"body": [
			"with open($1, 'r') as handle:\n    content = handle.readlines()\n    $0"
		],
		"description": "with open read"
    },
}